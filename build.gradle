import org.jetbrains.kotlin.config.KotlinCompilerVersion

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'io.spring.dependency-management'
    id 'org.springframework.boot'
    id 'org.asciidoctor.convert'
}

println("Using Gradle version: $gradle.gradleVersion")
println("Using Kotlin compiler version: $KotlinCompilerVersion.VERSION")

group = 'demo.kotlin'
version = '0.0.1-SNAPSHOT'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/michaelbull/maven' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    implementation "io.netty:netty-tcnative-boringssl-static:$netty_tcnative_version" // this dependency is only required for Java 8, since java 9 ALPN is natively supported
    implementation "io.jsonwebtoken:jjwt-api:$jjwt_version"
    implementation "io.jsonwebtoken:jjwt-jackson:$jjwt_version"
    implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
    implementation "io.projectreactor.kotlin:reactor-kotlin-extensions:$reactor_kotlin_extension_version"

    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwt_version"

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

// execute ./gradlew wrapper then remove .gradle directory when version change
wrapper {
    gradleVersion='6.4.1'
    distributionType=Wrapper.DistributionType.ALL
}
